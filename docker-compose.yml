version: '3.8'

services:
  # Frontend React Application
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    networks:
      - app-network
    depends_on:
      - server

  # Backend API Service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    environment:
      - NODE_OPTIONS=--max_old_space_size=4096
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=admin
      - DB_NAME=deepsearchdb
    networks:
      - app-network
    depends_on:
      - postgres

  # PostgreSQL Database
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=deepsearchdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app-network
    depends_on:
      - client
      - server

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: